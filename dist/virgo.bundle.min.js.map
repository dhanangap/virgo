{"version":3,"file":"virgo.bundle.min.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./src/core/Animation/PageDrag.ts","webpack:///./src/core/Animation/PageTransition.ts","webpack:///./src/core/Component/ComponentConfig.ts","webpack:///./src/core/Component/Component.ts","webpack:///./src/core/PagedComponent/Page.ts","webpack:///./src/core/PagedComponent/PageContainer.ts","webpack:///./src/core/PagedComponent/PageControlButton.ts","webpack:///./src/core/PagedComponent/PageControl.ts","webpack:///./src/core/PagedComponent/PagedComponentConfig.ts","webpack:///./src/core/PagedComponent/PagedComponent.ts","webpack:///./src/bundle.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Virgo\"] = factory();\n\telse\n\t\troot[\"Virgo\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class PageDrag {\n    constructor(parent) {\n        this.parent = parent;\n        this.startPos = 0;\n        this.amount = 0;\n        this.threshold = 0.15;\n        this.isDragging = false;\n        // Cursor drag\n        this.parent.element.addEventListener(\"mousedown\", (event) => {\n            this.initDrag(event.pageX);\n        });\n        this.parent.element.addEventListener(\"mousemove\", (event) => {\n            this.drag(event.pageX);\n        });\n        this.parent.element.addEventListener(\"mouseup\", () => {\n            this.stopDrag();\n        });\n        this.parent.element.addEventListener(\"mouseleave\", () => {\n            this.stopDrag();\n        });\n        // Touch drag\n        this.parent.element.addEventListener(\"touchstart\", (event) => {\n            this.initDrag(event.touches[0].clientX);\n        });\n        this.parent.element.addEventListener(\"touchmove\", (event) => {\n            this.drag(event.touches[0].clientX);\n        });\n        this.parent.element.addEventListener(\"touchend\", () => {\n            this.stopDrag();\n        });\n    }\n    initDrag(startPos) {\n        this.isDragging = true;\n        this.parent.parent.element.classList.add(\"dragging\");\n        this.startPos = startPos;\n        this.activePage = this.parent.activePage;\n        this.previousPage = this.parent.previousPage;\n        this.nextPage = this.parent.nextPage;\n        const containerRect = this.parent.element.getBoundingClientRect();\n        const activePageRect = this.activePage.element.getBoundingClientRect();\n        const previousPageRect = this.previousPage.element.getBoundingClientRect();\n        const nextPageRect = this.nextPage.element.getBoundingClientRect();\n        this.activePageStartPos = activePageRect.left - containerRect.left;\n        this.previousPageStartPos = this.activePageStartPos - previousPageRect.width;\n        this.nextPageStartPos = this.activePageStartPos + activePageRect.width;\n        this.containerStartHeight = containerRect.height;\n        this.containerPreviousHeight = this.previousPage.element.getBoundingClientRect().height;\n        this.containerNextHeight = this.nextPage.element.getBoundingClientRect().height;\n        this.parent.element.style.userSelect = \"none\";\n        this.parent.parent.stopAutoplay();\n    }\n    drag(amount) {\n        if (this.isDragging) {\n            this.amount = amount - this.startPos;\n            const movingRatio = this.amount / this.activePage.element.getBoundingClientRect().width;\n            let containerHeight = 0;\n            if (movingRatio < 0) {\n                if (this.containerNextHeight > this.containerStartHeight)\n                    containerHeight = this.containerStartHeight + Math.abs((this.containerNextHeight - this.containerStartHeight) * movingRatio);\n                else\n                    containerHeight = this.containerStartHeight - Math.abs((this.containerStartHeight - this.containerNextHeight) * movingRatio);\n            }\n            else {\n                if (this.containerPreviousHeight > this.containerStartHeight)\n                    containerHeight = this.containerStartHeight + Math.abs((this.containerPreviousHeight - this.containerStartHeight) * movingRatio);\n                else\n                    containerHeight = this.containerStartHeight - Math.abs((this.containerStartHeight - this.containerPreviousHeight) * movingRatio);\n            }\n            this.parent.element.style.height = `${containerHeight}px`;\n            this.activePage.element.style.transform = `translateX(${this.activePageStartPos + this.amount}px)`;\n            this.previousPage.element.style.transform = `translateX(${this.previousPageStartPos + this.amount}px)`;\n            this.nextPage.element.style.transform = `translateX(${this.nextPageStartPos + this.amount}px)`;\n        }\n    }\n    stopDrag() {\n        if (this.isDragging) {\n            this.parent.parent.element.classList.remove(\"dragging\");\n            const elementWidth = this.activePage.element.getBoundingClientRect().width;\n            let direction = 0;\n            if (this.amount >= (elementWidth * this.threshold))\n                direction = -1;\n            else if (this.amount <= (elementWidth * this.threshold * -1))\n                direction = 1;\n            this.isDragging = false;\n            this.amount = 0;\n            this.startPos = 0;\n            const duration = 300;\n            const animationConfig = {\n                duration: duration,\n                easing: \"ease-out\",\n            };\n            // Revert to normal\n            if (direction === 0) {\n                setTimeout(() => {\n                    this.parent.element.style.height = `${this.containerStartHeight}px`;\n                    this.activePage.element.style.transform = `translateX(${this.activePageStartPos}px)`;\n                    this.previousPage.element.style.transform = `translateX(${this.previousPageStartPos}px)`;\n                    this.nextPage.element.style.transform = `translateX(${this.nextPageStartPos}px)`;\n                }, duration - 10);\n                setTimeout(() => {\n                    this.parent.element.style.height = ``;\n                    this.activePage.element.style.transform = ``;\n                    this.previousPage.element.style.transform = ``;\n                    this.nextPage.element.style.transform = ``;\n                }, duration + 10);\n                this.parent.element.animate([\n                    { height: this.parent.element.style.height },\n                    { height: `${this.containerStartHeight}px` },\n                ], animationConfig);\n                this.activePage.element.animate([\n                    { transform: this.activePage.element.style.transform },\n                    { transform: `translateX(${this.activePageStartPos}px)` },\n                ], animationConfig);\n                this.previousPage.element.animate([\n                    { transform: this.previousPage.element.style.transform },\n                    { transform: `translateX(${this.previousPageStartPos}px)` },\n                ], animationConfig);\n                this.nextPage.element.animate([\n                    { transform: this.nextPage.element.style.transform },\n                    { transform: `translateX(${this.nextPageStartPos}px)` },\n                ], animationConfig);\n            }\n            // Go forward\n            else if (direction === 1) {\n                setTimeout(() => {\n                    this.parent.element.style.height = `${this.containerNextHeight}px`;\n                    this.activePage.element.style.transform = `translateX(${this.activePageStartPos - elementWidth}px)`;\n                    this.previousPage.element.style.transform = `translateX(${this.previousPageStartPos - elementWidth}px)`;\n                    this.nextPage.element.style.transform = `translateX(${this.nextPageStartPos - elementWidth}px)`;\n                }, duration - 10);\n                setTimeout(() => {\n                    this.parent.activePageIndex = this.parent.nextPageIndex;\n                    this.parent.element.style.height = ``;\n                    this.activePage.element.style.transform = ``;\n                    this.previousPage.element.style.transform = ``;\n                    this.nextPage.element.style.transform = ``;\n                }, duration + 10);\n                this.parent.element.animate([\n                    { height: this.activePage.element.style.height },\n                    { height: `${this.containerNextHeight}px` },\n                ], animationConfig);\n                this.activePage.element.animate([\n                    { transform: this.activePage.element.style.transform },\n                    { transform: `translateX(${this.activePageStartPos - elementWidth}px)` },\n                ], animationConfig);\n                this.previousPage.element.animate([\n                    { transform: this.previousPage.element.style.transform },\n                    { transform: `translateX(${this.previousPageStartPos - elementWidth}px)` },\n                ], animationConfig);\n                this.nextPage.element.animate([\n                    { transform: this.nextPage.element.style.transform },\n                    { transform: `translateX(${this.nextPageStartPos - elementWidth}px)` },\n                ], animationConfig);\n            }\n            // Go back\n            else if (direction === -1) {\n                const elementWidth = this.activePage.element.getBoundingClientRect().width;\n                setTimeout(() => {\n                    this.parent.element.style.height = `${this.containerPreviousHeight}px`;\n                    this.activePage.element.style.transform = `translateX(${this.activePageStartPos + elementWidth}px)`;\n                    this.previousPage.element.style.transform = `translateX(${this.previousPageStartPos + elementWidth}px)`;\n                    this.nextPage.element.style.transform = `translateX(${this.nextPageStartPos + elementWidth}px)`;\n                }, duration - 10);\n                setTimeout(() => {\n                    this.parent.activePageIndex = this.parent.previousPageIndex;\n                    this.parent.element.style.height = ``;\n                    this.activePage.element.style.transform = ``;\n                    this.previousPage.element.style.transform = ``;\n                    this.nextPage.element.style.transform = ``;\n                }, duration + 10);\n                this.parent.element.animate([\n                    { height: this.activePage.element.style.height },\n                    { height: `${this.containerPreviousHeight}px` },\n                ], animationConfig);\n                this.activePage.element.animate([\n                    { transform: this.activePage.element.style.transform },\n                    { transform: `translateX(${this.activePageStartPos + elementWidth}px)` },\n                ], animationConfig);\n                this.previousPage.element.animate([\n                    { transform: this.previousPage.element.style.transform },\n                    { transform: `translateX(${this.previousPageStartPos + elementWidth}px)` },\n                ], animationConfig);\n                this.nextPage.element.animate([\n                    { transform: this.nextPage.element.style.transform },\n                    { transform: `translateX(${this.nextPageStartPos + elementWidth}px)` },\n                ], animationConfig);\n            }\n            this.parent.element.style.userSelect = \"\";\n            this.parent.parent.startAutoplay();\n        }\n    }\n}\n","export default class PageTransition {\n    constructor(parent, fromIndex, targetIndex, direction) {\n        this.parent = parent;\n        this.fromIndex = fromIndex;\n        this.targetIndex = targetIndex;\n        this.direction = direction;\n    }\n    get fromPage() {\n        return this.parent.pages[this.fromIndex];\n    }\n    get targetPage() {\n        return this.parent.pages[this.targetIndex];\n    }\n    slide(duration, callback = function () { }) {\n        setTimeout(() => {\n            callback();\n        }, duration - 10);\n        const animationConfig = {\n            duration: duration,\n            easing: \"cubic-bezier(.46,.15,.31,.88)\",\n        };\n        const parentHeightInitial = this.parent.element.getBoundingClientRect().height;\n        const parentHeightAfter = this.targetPage.element.getBoundingClientRect().height;\n        console.log(parentHeightInitial);\n        console.log(parentHeightAfter);\n        const fromPositionInitial = 0;\n        const fromPositionAfter = fromPositionInitial - (this.targetPage.element.scrollWidth * this.direction);\n        const targetPositionInitial = this.fromPage.element.scrollWidth * this.direction;\n        const targetPositionAfter = 0;\n        this.parent.element.animate([\n            { height: parentHeightInitial + \"px\" },\n            { height: parentHeightAfter + \"px\" },\n        ], animationConfig);\n        this.fromPage.element.animate([\n            { transform: `translateX(${fromPositionInitial}px)` },\n            { transform: `translateX(${fromPositionAfter}px)` },\n        ], animationConfig);\n        this.targetPage.element.animate([\n            { transform: `translateX(${targetPositionInitial}px)` },\n            { transform: `translateX(${targetPositionAfter}px)` },\n        ], animationConfig);\n    }\n    fade(duration, callback = function () { }) {\n        const animationConfig = {\n            duration: duration,\n            easing: \"cubic-bezier(.2,.36,.07,.88)\",\n        };\n        const parentHeightInitial = this.parent.element.getBoundingClientRect().height;\n        const parentHeightAfter = this.targetPage.element.getBoundingClientRect().height;\n        var parentAnimation = this.parent.element.animate([\n            { height: parentHeightInitial + \"px\" },\n            { height: parentHeightAfter + \"px\" },\n        ], animationConfig);\n        parentAnimation.onfinish = (event) => {\n            callback();\n        };\n        var currentPageAnimation = this.fromPage.element.animate([\n            { transform: `translate3d(0px, 0px, 0px)`, opacity: 1 },\n            { transform: `translate3d(0px, 0px, 0px)`, opacity: 0 },\n        ], Object.assign(Object.assign({}, animationConfig), { duration: duration * 0.5 }));\n        currentPageAnimation.onfinish = (event) => {\n            this.fromPage.element.animate([\n                { transform: `translate3d(0px, 0px, 0px)`, opacity: 0 },\n                { transform: `translate3d(0px, 0px, 0px)`, opacity: 0 },\n            ], {\n                duration: duration * 0.5,\n            });\n            this.targetPage.element.animate([\n                { transform: `translate3d(0px, 0px, 0px)`, opacity: 0 },\n                { transform: `translate3d(0px, 0px, 0px)`, opacity: 1 },\n            ], Object.assign(Object.assign({}, animationConfig), { duration: duration * 0.5 }));\n        };\n    }\n}\n","export const ComponentConfigDefaults = {\n    // Static class usage\n    autoCreateInstances: true,\n    autoGenerateId: true,\n    // Class instance config\n    id: undefined,\n};\n","import { ComponentConfigDefaults } from \"./ComponentConfig\";\n/** Virgo Component base class. */\nexport default class Component {\n    /**\n     * Create instance of this class.\n     * @param element - HTML Element (or query selector string of element) to be created as instance.\n     * @param config - Component configuration of the instance.\n     */\n    constructor(element, config = ComponentConfigDefaults) {\n        let htmlElement = (typeof element === \"string\") ? document.querySelector(element) : element;\n        if (!htmlElement)\n            return;\n        // Set properties of this instance.\n        this.element = htmlElement;\n        this.id = config.id ? config.id : undefined;\n        // If an id is provided, set element's HTML id.\n        if (this.id)\n            this.element.id = this.id;\n    }\n    /**\n     * Returns array of instances of this class.\n     * Will return an empty array if there's no instance registered.\n     */\n    static get instances() {\n        if (!this.registry[this.className])\n            return [];\n        return this.registry[this.className];\n    }\n    /**\n     * Register created instance of this class to be indexed and used later.\n     * @param instance - The instance to be registered\n     */\n    static register(instance) {\n        if (!this.registry[this.className])\n            this.registry[this.className] = [];\n        this.registry[this.className].push(instance);\n    }\n    /**\n     * Initialize class and creating instances from selector.\n     * @param selector - A valid query selector of elements to be created as instance of this class (optional).\n     * @param config - Component configuration (optional).\n     * @returns total number of instances created.\n     */\n    static init(selector, config = ComponentConfigDefaults) {\n        // If autoCreateInstances config is true, create instances from selected elements on the page.\n        if (this.config.autoCreateInstances) {\n            const elements = document.querySelectorAll(selector ? selector : this.defaultSelector);\n            for (let index = 0; index < elements.length; index++) {\n                const element = elements[index];\n                let id;\n                // Generate the id.\n                if (config.autoGenerateId)\n                    id = element.id ? element.id : `${this.className}-${this.instances.length}`;\n                // Register the newly created instance.\n                this.register(new this(element, Object.assign(Object.assign({}, config), { id })));\n            }\n            return elements.length;\n        }\n        // Return 0 if autoCreateInstances config is set to false.\n        return 0;\n    }\n}\n// [ Static ] ---------------------------------------------------------------------------------\nComponent.className = \"component\";\nComponent.defaultSelector = \".component\";\nComponent.registry = {};\nComponent.config = ComponentConfigDefaults;\n","import Component from \"../Component/Component\";\n/**\n * Class representing Page inside PagedComponent.\n */\nexport default class Page extends Component {\n    /**\n     * Creates a Page instance.\n     * @param parent - PageContainer that contains this instance.\n     * @param index - Index number of this instance between other pages inside the parent.\n     * @param element - HTML DOM Element of this instance.\n     */\n    constructor(parent, index, element) {\n        super(element);\n        this.parent = parent;\n        this.index = index;\n    }\n    /** Returns a boolean indicating whether this is an active page. */\n    get isActive() { return this.index === this.parent.activePageIndex; }\n    /** Returns a boolean indicating whether this is first page. */\n    get isFirst() { return this.index === this.parent.firstPageIndex; }\n    /** Returns a boolean indicating whether this is last page. */\n    get isLast() { return this.index === this.parent.lastPageIndex; }\n    /** Returns a boolean indicating whether this is the previous of an active page. */\n    get isPrevious() { return this.index === this.parent.previousPageIndex; }\n    /** Returns a boolean indicating whether this is the next of an active page. */\n    get isNext() { return this.index === this.parent.nextPageIndex; }\n    /** Updates the page classes to reflect real-time conditions.  */\n    update() {\n        // Remove classes.\n        this.element.classList.remove(\"active\");\n        this.element.classList.remove(\"previous\");\n        this.element.classList.remove(\"next\");\n        // Give the class accordingly.\n        if (this.isActive)\n            this.element.classList.add(\"active\");\n        else if (this.isPrevious)\n            this.element.classList.add(\"previous\");\n        else if (this.isNext)\n            this.element.classList.add(\"next\");\n    }\n}\n","import Component from \"../Component/Component\";\nimport Page from \"./Page\";\n/**\n * Class representing container of Pages inside a PagedComponent.\n */\nexport default class PageContainer extends Component {\n    /**\n     * Creates a new instance of this class.\n     * @param parent - PagedComponent instance that contains this.\n     * @param element - HTML DOM Element of this instance.\n     */\n    constructor(parent, element) {\n        super(element);\n        this.parent = parent;\n        this.pages = [];\n        this.initPages();\n    }\n    /** Returns index of currently active Page. */\n    get activePageIndex() { return this.parent.activePageIndex; }\n    /** Set the index of active Page. */\n    set activePageIndex(index) { this.parent.activePageIndex = index; }\n    /** Returns index of the first Page. */\n    get firstPageIndex() { return 0; }\n    /** Returns index of the last Page. */\n    get lastPageIndex() { return this.pages.length - 1; }\n    /** Returns index of the next Page of currently active Page. */\n    get nextPageIndex() { return (this.activePageIndex === this.lastPageIndex) ? (0) : (this.activePageIndex + 1); }\n    /** Returns index of the previous Page of currently active Page. */\n    get previousPageIndex() { return (this.activePageIndex === this.firstPageIndex) ? (this.lastPageIndex) : (this.activePageIndex - 1); }\n    /** Returns currently active Page. */\n    get activePage() { return this.pages.find(page => page.isActive); }\n    /** Returns the next of currently active Page. */\n    get nextPage() { return this.pages.find(page => page.isNext); }\n    /** Returns the previous of currently active Page. */\n    get previousPage() { return this.pages.find(page => page.isPrevious); }\n    /** Returns the first Page. */\n    get firstPage() { return this.pages[this.firstPageIndex]; }\n    /** Returns the last Page. */\n    get lastPage() { return this.pages[this.lastPageIndex]; }\n    /**\n     * Initialize Pages contained by this instance.\n     */\n    initPages() {\n        const pageElements = this.element.querySelectorAll(this.parent._config.pageSelector);\n        for (let index = 0; index < pageElements.length; index++) {\n            const pageElement = pageElements[index];\n            this.pages.push(new Page(this, index, pageElement));\n        }\n        if (pageElements.length === 0) {\n            let pageElement = document.createElement(\"div\");\n            pageElement.setAttribute(\"class\", \"page\");\n            this.element.appendChild(pageElement);\n            this.pages.push(new Page(this, 0, pageElement));\n        }\n    }\n    /**\n     * Update all Pages to reflect real-time conditions.\n     */\n    updatePages() {\n        for (const page of this.pages) {\n            page.update();\n        }\n    }\n    /**\n     * Add a new Page.\n     * @param index - Index for the new Page.\n     * @param element - HTML DOM Element of the new Page.\n     */\n    addPage(index, element) {\n        let refPage;\n        let newPage = new Page(this, index, element);\n        if (this.pages[index]) {\n            refPage = this.pages[index].element;\n            refPage.before(newPage.element);\n            if (index <= this.activePageIndex)\n                this.activePageIndex = this.activePageIndex + 1;\n        }\n        else if (this.pages.length === 0) {\n            this.element.appendChild(newPage.element);\n            this.activePageIndex = 0;\n        }\n        else if (index === this.pages.length) {\n            refPage = this.pages[index - 1].element;\n            refPage.after(newPage.element);\n            if (index <= this.activePageIndex)\n                this.activePageIndex = this.activePageIndex + 1;\n        }\n        else {\n            return;\n        }\n        this.pages.splice(index, 0, newPage);\n        for (let i = 0; i < this.pages.length; i++) {\n            const page = this.pages[i];\n            page.index = i;\n        }\n        this.updatePages();\n    }\n    /**\n     * Remove all Pages inside this instance.\n     */\n    removeAllPages() {\n        this.pages = [];\n        this.element.innerHTML = \"\";\n    }\n    /**\n     * Remove specific Page inside this instance.\n     * @param index - Index of the Page to be removed.\n     */\n    removePage(index) {\n        if (this.pages[index]) {\n            this.pages[index].element.remove();\n            this.pages.splice(index, 1);\n            this.updatePages();\n        }\n    }\n}\nPageContainer.className = \"pages\";\n","import Component from \"../Component/Component\";\n/** Class representing button of PageControl. */\nexport default class PageControlButton extends Component {\n    /**\n     * Create new instance of this class.\n     * @param parent - PageControl component containing this instance.\n     * @param target - Index of the targeted page.\n     * @param element - HTML DOM Element of the button.\n     */\n    constructor(parent, target, element) {\n        super(element);\n        this.parent = parent;\n        this.target = target;\n        this.element.dataset[\"target\"] = target + \"\";\n        this.initEvents();\n        this.update();\n    }\n    /**\n     * Initialize event listener of the button element.\n     * */\n    initEvents() {\n        this.element.addEventListener(\"click\", () => {\n            this.parent.targetComponent.goTo(this.target);\n            this.parent.targetComponent.resetAutoplay();\n        });\n    }\n    /**\n     * Update button to reflect real-time conditions.\n     */\n    update() {\n        const index = typeof this.target === \"number\" ? this.target : parseInt(this.target);\n        if (!isNaN(index)) {\n            this.element.classList.remove(\"active\");\n            if (index === this.parent.targetComponent.activePageIndex)\n                this.element.classList.add(\"active\");\n        }\n    }\n}\n","import Component from \"../Component/Component\";\nimport PageControlButton from \"./PageControlButton\";\n/** Class representing the control of PagedComponent. */\nexport default class PageControl extends Component {\n    /**\n     * Create new instance of this class.\n     * @param targetComponent - A PagedComponent instance to be controlled.\n     * @param element - HTML DOM Element of this instance.\n     */\n    constructor(targetComponent, element) {\n        super(element);\n        this.targetComponent = targetComponent;\n        this.initButtons();\n    }\n    /**\n     * Convert buttons inside this element as PageControlButton instances.\n     */\n    initButtons() {\n        this.buttons = [];\n        const buttons = this.element.querySelectorAll(\"button\");\n        let indexedButtons = [];\n        let unindexedButtons = [];\n        for (const button of buttons) {\n            if (button.hasAttribute(\"data-target\"))\n                indexedButtons.push(button);\n            else\n                unindexedButtons.push(button);\n        }\n        // Convert buttons without target index as indicator buttons.\n        for (let index = 0; index < unindexedButtons.length; index++) {\n            const button = unindexedButtons[index];\n            this.buttons.push(new PageControlButton(this, index, button));\n        }\n        // Convert buttons with target index as navigation buttons.\n        for (const button of indexedButtons) {\n            this.buttons.push(new PageControlButton(this, button.dataset[\"target\"], button));\n        }\n    }\n    /**\n     * Update all buttons to reflect real-time conditions.\n     */\n    updateButtons() {\n        for (const button of this.buttons) {\n            button.update();\n        }\n    }\n}\n","export const PagedComponentConfigDefaults = {\n    transition: \"slide\",\n    transitionDuration: 500,\n    autoplay: false,\n    autoplayDuration: 3000,\n    pageContainerSelector: \"pages\",\n    pageSelector: \"page\",\n    controlSelector: \"control\",\n    draggable: true,\n};\n","import PageDrag from \"../Animation/PageDrag\";\nimport PageTransition from \"../Animation/PageTransition\";\nimport Component from \"../Component/Component\";\nimport PageContainer from \"./PageContainer\";\nimport PageControl from \"./PageControl\";\nimport { PagedComponentConfigDefaults } from \"./PagedComponentConfig\";\n/**\n * Class representing a component with multiple pages.\n */\nexport default class PagedComponent extends Component {\n    /**\n     * Creates new instance of this class.\n     * @param element - HTML DOM Element of this instance.\n     * @param config - Config of this instance.\n     */\n    constructor(element, config = {}) {\n        super(element);\n        this.initConfig(config);\n        this.initPageContainer();\n        this.initControls();\n        this.initExternalControls();\n        this.activePageIndex = this.element.dataset[\"active\"] ? parseInt(this.element.dataset[\"active\"]) : 0;\n        if (this.transition !== \"slide\")\n            this.draggable = false;\n        if (this.draggable) {\n            this.pageDrag = new PageDrag(this.pageContainer);\n        }\n        this.startAutoplay();\n    }\n    /** Returns the total number of Pages. */\n    get totalPages() {\n        return this.pageContainer.pages.length;\n    }\n    /** Returns the index of currently active Page. */\n    get activePageIndex() {\n        return parseInt(this.element.dataset[\"active\"]);\n    }\n    /** Set the index of active Page. */\n    set activePageIndex(index) {\n        const oldVal = this.activePageIndex;\n        this.element.dataset[\"active\"] = index.toString();\n        this.pageContainer.updatePages();\n        for (const control of this.controls) {\n            control.updateButtons();\n        }\n        if (this.onActivePageChanged)\n            this.onActivePageChanged(index, oldVal);\n    }\n    /** Returns Page transition name. */\n    get transition() {\n        return this.element.dataset[\"transition\"];\n    }\n    /** Set Page transition. */\n    set transition(value) {\n        this.element.dataset[\"transition\"] = value;\n        this._config.transition = value;\n    }\n    /** Returns Page transition duration in miliseconds. */\n    get transitionDuration() {\n        return parseInt(this.element.dataset[\"transitionDuration\"]);\n    }\n    /** Set Page transition duration in miliseconds. */\n    set transitionDuration(value) {\n        this.element.dataset[\"transitionDuration\"] = value.toString();\n    }\n    /** Returns a boolean indicating whether autoplay is active or not. */\n    get autoplay() {\n        return this.element.dataset[\"autoplay\"] === \"true\";\n    }\n    /** Set autoplay. */\n    set autoplay(value) {\n        let autoplayValue;\n        if (typeof value === \"string\")\n            autoplayValue = (value.toLowerCase() === \"true\");\n        else\n            autoplayValue = value;\n        this.element.dataset[\"autoplay\"] = autoplayValue ? \"true\" : \"false\";\n    }\n    /** Returns autoplay duration in miliseconds. */\n    get autoplayDuration() {\n        return parseInt(this.element.dataset[\"autoplayDuration\"]);\n    }\n    /** Set duration before autoplay navigates to the next page, in miliseconds. */\n    set autoplayDuration(value) {\n        this.element.dataset[\"autoplayDuration\"] = value.toString();\n    }\n    /** Return a boolean indicating whether the instance is draggable. */\n    get draggable() {\n        return this.element.dataset[\"draggable\"] === \"true\";\n    }\n    /** Set draggable value. */\n    set draggable(value) {\n        let draggableValue;\n        if (typeof value === \"string\")\n            draggableValue = (value.toLowerCase() === \"true\");\n        else\n            draggableValue = value;\n        this.element.dataset[\"draggable\"] = draggableValue ? \"true\" : \"false\";\n    }\n    /** Initialize component configuration. */\n    initConfig(config) {\n        const configuration = Object.assign(Object.assign({}, this.element.dataset), config);\n        this._config = PagedComponentConfigDefaults;\n        this.transition = configuration[\"transition\"] ? configuration[\"transition\"] : this._config[\"transition\"];\n        this.transitionDuration = configuration[\"transitionDuration\"] ? parseInt(configuration[\"transitionDuration\"]) : this._config[\"transitionDuration\"];\n        this.autoplay = configuration[\"autoplay\"] ? configuration[\"autoplay\"] : this._config[\"autoplay\"];\n        this.autoplayDuration = configuration[\"autoplayDuration\"] ? parseInt(configuration[\"autoplayDuration\"]) : this._config[\"autoplayDuration\"];\n        this.draggable = configuration[\"draggable\"] ? configuration[\"draggable\"] : this._config[\"draggable\"];\n        this.isTransitioning = false;\n        this.isPaused = false;\n    }\n    /** Initialize PageContainer. */\n    initPageContainer() {\n        let pageContainerElement = this.element.querySelector(this._config.pageContainerSelector);\n        if (!pageContainerElement) {\n            pageContainerElement = document.createElement(\"div\");\n            pageContainerElement.setAttribute(\"class\", this._config.pageContainerSelector.replace(\".\", \"\"));\n            this.element.appendChild(pageContainerElement);\n        }\n        ;\n        this.pageContainer = new PageContainer(this, pageContainerElement);\n    }\n    /** Initialize PageControl inside the component. */\n    initControls() {\n        if (!this.controls)\n            this.controls = [];\n        const controlElements = this.element.querySelectorAll(this._config.controlSelector);\n        for (const controlElement of controlElements) {\n            this.controls.push(new PageControl(this, controlElement));\n        }\n    }\n    /** Initialize PageControl outside the component. */\n    initExternalControls() {\n        if (!this.controls)\n            this.controls = [];\n        const controlElements = document.querySelectorAll(`[data-control=\"#${this.id}\"]`);\n        for (const controlElement of controlElements) {\n            this.controls.push(new PageControl(this, controlElement));\n        }\n    }\n    /** Start autoplay. */\n    startAutoplay() {\n        if (this.autoplay) {\n            this.isPaused = false;\n            this.autoplayInterval = setInterval(() => {\n                if (!this.isPaused)\n                    this.forward();\n            }, this.autoplayDuration);\n        }\n    }\n    /** Stop autoplay. */\n    stopAutoplay() {\n        if (this.autoplayInterval) {\n            clearInterval(this.autoplayInterval);\n            this.autoplayInterval = null;\n            this.isPaused = true;\n        }\n    }\n    /** Reset autoplay. */\n    resetAutoplay() {\n        if (this.autoplay) {\n            this.stopAutoplay();\n            this.startAutoplay();\n        }\n    }\n    /** Navigate to previous Page. */\n    back(callback) {\n        this.goTo(\"back\", callback);\n    }\n    /** Navigate to next Page. */\n    forward(callback) {\n        this.goTo(\"forward\", callback);\n    }\n    /**\n     * Navigate to specific Page index.\n     * @param index - Target page index.\n     * @param callback - Callback function to be called after transition.\n     */\n    goTo(index, callback) {\n        let targetIndex;\n        if (index === \"back\")\n            targetIndex = this.pageContainer.previousPageIndex;\n        else if (index === \"forward\")\n            targetIndex = this.pageContainer.nextPageIndex;\n        else if (typeof index === \"number\")\n            targetIndex = index;\n        else if (!isNaN(parseInt(index)))\n            targetIndex = parseInt(index);\n        else if (isNaN(parseInt(index))) {\n            const targetPage = this.pageContainer.pages.find(page => page.id === index || `#${page.id}` === index);\n            if (!targetPage)\n                return;\n            targetIndex = targetPage.index;\n        }\n        else\n            return;\n        if (this.activePageIndex === targetIndex)\n            return;\n        if (!this.pageContainer.pages[targetIndex])\n            return;\n        if (this.transition !== \"none\") {\n            let direction = 1;\n            if (targetIndex < this.activePageIndex)\n                direction = -1;\n            if (index === \"forward\")\n                direction = 1;\n            if (index === \"back\")\n                direction = -1;\n            const transition = new PageTransition(this.pageContainer, this.activePageIndex, targetIndex, direction);\n            if (this.transition === \"slide\") {\n                transition.slide(this.transitionDuration, () => {\n                    this.activePageIndex = targetIndex;\n                    if (callback)\n                        callback();\n                });\n            }\n            else if (this.transition === \"fade\") {\n                transition.fade(this.transitionDuration, () => {\n                    this.activePageIndex = targetIndex;\n                    if (callback)\n                        callback();\n                });\n            }\n        }\n        else {\n            this.activePageIndex = targetIndex;\n            if (callback)\n                callback();\n        }\n    }\n    /** Add new children page. */\n    addPage(index, element) {\n        this.pageContainer.addPage(index, element);\n    }\n    /** Remove all children pages. */\n    removeAllPages() {\n        this.pageContainer.removeAllPages();\n    }\n    /**\n     * Remove specific children page.\n     * @param index - Index of the page to be removed.\n     */\n    removePage(index) {\n        this.pageContainer.removePage(index);\n    }\n}\nPagedComponent.className = \"paged-component\";\nPagedComponent.defaultSelector = \".paged-component\";\n","import PagedComponent from \"./core/PagedComponent/PagedComponent\";\nPagedComponent.init();\n"],"names":["root","factory","exports","module","define","amd","self","Symbol","toStringTag","Object","defineProperty","value","PageDrag","constructor","parent","this","startPos","amount","threshold","isDragging","element","addEventListener","event","initDrag","pageX","drag","stopDrag","touches","clientX","classList","add","activePage","previousPage","nextPage","containerRect","getBoundingClientRect","activePageRect","previousPageRect","activePageStartPos","left","previousPageStartPos","width","nextPageStartPos","containerStartHeight","height","containerPreviousHeight","containerNextHeight","style","userSelect","stopAutoplay","movingRatio","containerHeight","Math","abs","transform","remove","elementWidth","direction","duration","animationConfig","easing","setTimeout","animate","activePageIndex","nextPageIndex","previousPageIndex","startAutoplay","PageTransition","fromIndex","targetIndex","fromPage","pages","targetPage","slide","callback","parentHeightInitial","parentHeightAfter","console","log","fromPositionAfter","scrollWidth","targetPositionInitial","fade","onfinish","opacity","assign","ComponentConfigDefaults","autoCreateInstances","autoGenerateId","id","undefined","Component","config","htmlElement","document","querySelector","instances","registry","className","static","instance","push","selector","elements","querySelectorAll","defaultSelector","index","length","register","Page","super","isActive","isFirst","firstPageIndex","isLast","lastPageIndex","isPrevious","isNext","update","PageContainer","initPages","find","page","firstPage","lastPage","pageElements","_config","pageSelector","pageElement","createElement","setAttribute","appendChild","updatePages","addPage","refPage","newPage","before","after","splice","i","removeAllPages","innerHTML","removePage","PageControlButton","target","dataset","initEvents","targetComponent","goTo","resetAutoplay","parseInt","isNaN","PageControl","initButtons","buttons","indexedButtons","unindexedButtons","button","hasAttribute","updateButtons","PagedComponentConfigDefaults","transition","transitionDuration","autoplay","autoplayDuration","pageContainerSelector","controlSelector","draggable","PagedComponent","initConfig","initPageContainer","initControls","initExternalControls","pageDrag","pageContainer","totalPages","oldVal","toString","control","controls","onActivePageChanged","autoplayValue","toLowerCase","draggableValue","configuration","isTransitioning","isPaused","pageContainerElement","replace","controlElements","controlElement","autoplayInterval","setInterval","forward","clearInterval","back","init"],"sourceRoot":""}